directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type AudioCodec implements Node {
  id: ID!
  name: String!
  mime: String!
  streams: [Stream!]
  audioTracks: [AudioTrack!]
  media: PlaySessionMedia
}
type AudioTrack implements Node {
  id: ID!
  name: String!
  nrChannels: Int!
  channelLayout: String!
  language: String
  codecs: [AudioCodec!]
  media: PlaySessionMedia!
}
"""
CreateLibraryInput is used for create Library object.
Input was generated by ent.
"""
input CreateLibraryInput {
  path: String!
  createdAt: Time
  videoIDs: [ID!]
}
"""
CreatePlaySessionInput is used for create PlaySession object.
Input was generated by ent.
"""
input CreatePlaySessionInput {
  currentTime: Int
  state: PlaySessionState
  clientIDs: [ID!]
  mediaID: ID
}
"""
CreateVideoInput is used for create Video object.
Input was generated by ent.
"""
input CreateVideoInput {
  path: String!
  createdAt: Time
  playSessionMediaIDs: [ID!]
  libraryID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Library implements Node {
  id: ID!
  path: String!
  createdAt: Time!
  videos: [Video!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/altierawr/vstreamer/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type PlaySession implements Node {
  id: ID!
  currentTime: Int
  state: PlaySessionState!
  clients: [PlaybackClient!]
  media: PlaySessionMedia
}
type PlaySessionMedia implements Node {
  id: ID!
  resolutions: [String!]!
  audioTracks: [AudioTrack!]
  video: Video
  session: PlaySession!
  videoCodecs: [VideoCodec!]
  audioCodecs: [AudioCodec!]
}
"""
PlaySessionState is enum for the field state
"""
enum PlaySessionState @goModel(model: "github.com/altierawr/vstreamer/ent/playsession.State") {
  PLAYING
  PAUSED
  BUFFERING
  STOPPED
}
type PlaybackClient implements Node {
  id: ID!
  isBuffered: Boolean!
  session: PlaySession
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  libraries: [Library!]!
  playSessions: [PlaySession!]!
  videos: [Video!]!
}
type Stream implements Node {
  id: ID!
  width: Int!
  height: Int!
  container: String!
  segmentDuration: Int!
  quality: StreamQuality!
  type: StreamType!
  videoCodec: VideoCodec
  audioCodec: AudioCodec
}
"""
StreamQuality is enum for the field quality
"""
enum StreamQuality @goModel(model: "github.com/altierawr/vstreamer/ent/stream.Quality") {
  maximum
  medium
  low
}
"""
StreamType is enum for the field type
"""
enum StreamType @goModel(model: "github.com/altierawr/vstreamer/ent/stream.Type") {
  direct
  remux
  video_transcode
  audio_transcode
  full_transcode
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateLibraryInput is used for update Library object.
Input was generated by ent.
"""
input UpdateLibraryInput {
  path: String
  createdAt: Time
  addVideoIDs: [ID!]
  removeVideoIDs: [ID!]
  clearVideos: Boolean
}
"""
UpdatePlaySessionInput is used for update PlaySession object.
Input was generated by ent.
"""
input UpdatePlaySessionInput {
  currentTime: Int
  clearCurrentTime: Boolean
  state: PlaySessionState
  addClientIDs: [ID!]
  removeClientIDs: [ID!]
  clearClients: Boolean
  mediaID: ID
  clearMedia: Boolean
}
"""
UpdateVideoInput is used for update Video object.
Input was generated by ent.
"""
input UpdateVideoInput {
  path: String
  createdAt: Time
  addPlaySessionMediaIDs: [ID!]
  removePlaySessionMediaIDs: [ID!]
  clearPlaySessionMedias: Boolean
  libraryID: ID
  clearLibrary: Boolean
}
type Video implements Node {
  id: ID!
  path: String!
  createdAt: Time!
  playSessionMedias: [PlaySessionMedia!]
  library: Library
}
type VideoCodec implements Node {
  id: ID!
  name: String!
  mime: String!
  dynamicRange: VideoCodecDynamicRange!
  streams: [Stream!]
  media: PlaySessionMedia
}
"""
VideoCodecDynamicRange is enum for the field dynamic_range
"""
enum VideoCodecDynamicRange @goModel(model: "github.com/altierawr/vstreamer/ent/videocodec.DynamicRange") {
  sdr
  hdr
}
